/*In mathematics, the Baumâ€“Sweet sequence is an infinite automatic sequence of 0s and 1s defined by the rule:
b_n = 1 if the binary representation of n contains no block of consecutive 0s of odd length;
b_n = 0 otherwise;
for n >= 0.
For example, b_4 = 1 because the binary representation of 4 is 100, which only contains one block of consecutive 0s of length 2; whereas b_5 = 0 because the binary representation of 5 is 101, which contains a block of consecutive 0s of length 1. When n is 19611206, b_n is 0 because:
19611206 = 1001010110011111001000110 base 2
            00 0 0  00     00 000  0 runs of 0s
               ^ ^            ^^^    odd length sequences
Because we find an odd length sequence of 0s, b_n is 0. 
Challenge Description
Your challenge today is to write a program that generates the Baum-Sweet sequence from 1 to some number n. For example, given "20" your program would emit:
1, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0*/

import java.io.*;
import java.util.*;
public class Baum_Sweet_Sequence
{
    int i = 1;//will store the number 
    public void printer(int n)
    {
        if(i<=n)//checks if limit is reached
        {
            int t = 0,c;//t stores length of consecutive string of 0's, c is loop variable
            String s = Integer.toBinaryString(i);//converts integer to binary and stores as String
            for(c = 0;c<s.length();c++)//running through the binary String
            {
             if(s.charAt(c)=='0')//if 0 occurs, t increases by 1
             t++;
             if(s.charAt(c)=='1'||c==s.length()-1){//if 1 is encountered string of 0's has ended, so we check its length
                 //alternately, if we reach last bit, we check the length of the string of 0's
                 if(t%2!=0){
                 System.out.print("0, ");//if the string of 0's is odd in length we print 0
                 break;}
                 t=0;
                }
            }
            if(c==s.length())//if c equals lenght of s it means the full loop has run without encountering odd length of 0's
            System.out.print("1, ");
            i++;
            printer(n);//recursive call to the function to print next number
        }
    }
    public static void main(String args[])
    {
        Scanner in = new Scanner(System.in);
        System.out.println("ENTER NUMBER:");
        int n = in.nextInt();
        new Baum_Sweet_Sequence().printer(n);
    }
}

                    
             
   
